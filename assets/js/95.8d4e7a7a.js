(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{475:function(t,e,l){"use strict";l.r(e);var n=l(29),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,l=t._self._c||e;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h1",{attrs:{id:"依赖分析"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#依赖分析"}},[t._v("#")]),t._v(" 依赖分析")]),t._v(" "),l("ul",[l("li",[t._v("解析 AST")]),t._v(" "),l("li",[t._v("使用 Parser 分析项目依赖\n"),l("ul",[l("li",[t._v("traverse AST\n"),l("ul",[l("li",[t._v("path.node.type === 'ImportDeclaration'")]),t._v(" "),l("li",[t._v("写入 depRelation")]),t._v(" "),l("li",[t._v("支持循环依赖判断（keys.include(key))")])])]),t._v(" "),l("li",[t._v("一直循环这个解析结果数组，将里面的依赖文件解析完")])])]),t._v(" "),l("li",[t._v("构建依赖图谱")])])])}),[],!1,null,null,null);e.default=r.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{477:function(l,e,a){"use strict";a.r(e);var v=a(29),i=Object(v.a)({},(function(){var l=this,e=l.$createElement,a=l._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":l.$parent.slotKey}},[a("h1",{attrs:{id:"常见问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[l._v("#")]),l._v(" 常见问题")]),l._v(" "),a("h2",{attrs:{id:"如何优化打包速度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何优化打包速度"}},[l._v("#")]),l._v(" 如何优化打包速度")]),l._v(" "),a("ul",[a("li",[l._v("升级 webpack")]),l._v(" "),a("li",[l._v("多进程/多实例构建（资源并行解析）\n"),a("ul",[a("li",[l._v("thread-loader（官方推出）")]),l._v(" "),a("li",[l._v("parallel-webpack")]),l._v(" "),a("li",[l._v("HappyPack")])])]),l._v(" "),a("li",[l._v("多进程/多实例进行代码压缩（并行压缩）\n"),a("ul",[a("li",[l._v("webpack-parallel-uglify-plugin")]),l._v(" "),a("li",[l._v("uglifyjs-webpack-plugin")]),l._v(" "),a("li",[l._v("terser-webpack-plugin "),a("strong",[l._v("(webpack4.0推荐使用，支持压缩es6代码)")])])])]),l._v(" "),a("li",[l._v("通过分包提升打包速度\n"),a("ul",[a("li",[l._v("html-webpack-externals-plugin\n"),a("ul",[a("li",[l._v("分离基础包")]),l._v(" "),a("li",[l._v("分离之后以CDN的方式引入所需要的资源文件，缺点就是一个基础库必须指定一个CDN，实际项目开发中可能会引用到多个基础库，还有一些业务包，这样会打出很多个script标签")])])]),l._v(" "),a("li",[l._v("DLLPlugin")])])]),l._v(" "),a("li",[l._v("通过缓存提升二次打包速度\n"),a("ul",[a("li",[l._v("babel-loader 开启缓存\n"),a("ul",[a("li",[l._v("cacheDirectory=true")])])]),l._v(" "),a("li",[l._v("terser-webpack-plugin 开启缓存")]),l._v(" "),a("li",[l._v("使用cache-loader或者 hard-source-webpack-plugin")])])]),l._v(" "),a("li",[l._v("优化 loader\n"),a("ul",[a("li",[l._v("babel-loader 不解析 node_modules")])])]),l._v(" "),a("li",[l._v("优化 resolve.extensions 的查找速度")]),l._v(" "),a("li",[l._v("优化 resolve.alias\n"),a("ul",[a("li",[l._v("使用 @ 压缩路径")])])]),l._v(" "),a("li",[l._v("合理使用 sourceMap")])]),l._v(" "),a("h2",{attrs:{id:"plugin-和-loader-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#plugin-和-loader-的区别"}},[l._v("#")]),l._v(" plugin 和 loader 的区别")]),l._v(" "),a("ul",[a("li",[l._v("loader 是文件加载器，能够加载资源文件，并对这些文件进行一些处理，诸如编译、压缩等，最终一起打包到指定的文件中")]),l._v(" "),a("li",[l._v("plugin 赋予了 webpack 各种灵活的功能，例如打包优化、资源管理、环境变量注入等，目的是解决 loader 无法实现的其他事")])]),l._v(" "),a("p",[a("img",{attrs:{src:"https://peterchen97.coding.net/p/img2/d/test/git/raw/master/1b549541d6c844ac8ed6f4c5e5d5cee95c9224a97a48eef49bb978e6cd2ebfbf.png",alt:"图 5"}})]),l._v(" "),a("h2",{attrs:{id:"和其他同类打包工具的区别和对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#和其他同类打包工具的区别和对比"}},[l._v("#")]),l._v(" 和其他同类打包工具的区别和对比")]),l._v(" "),a("ul",[a("li",[l._v("Rollup 是一款 ES Modules 打包器，从作用上来看，Rollup 与 Webpack 非常类似。不过相比于 Webpack，Rollup要小巧的多\n"),a("ul",[a("li",[l._v("但缺点也十分明显，加载其他类型的资源文件或者支持导入 CommonJS 模块，又或是编译 ES 新特性，这些额外的需求 Rollup需要使用插件去完成")])])]),l._v(" "),a("li",[l._v("Parcel ，是一款完全零配置的前端打包器")]),l._v(" "),a("li",[l._v("snowpack + vite")])])])}),[],!1,null,null,null);e.default=i.exports}}]);
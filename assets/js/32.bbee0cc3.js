(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{411:function(t,a,e){"use strict";e.r(a);var v=e(29),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"类型转换机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类型转换机制"}},[t._v("#")]),t._v(" 类型转换机制")]),t._v(" "),e("p",[t._v("虽然变量的数据类型是不确定的，但是各种运算符对数据类型是有要求的，如果运算子的类型与预期不符合，就会触发类型转换机制")]),t._v(" "),e("p",[t._v("常见的类型转换有：")]),t._v(" "),e("ul",[e("li",[t._v("强制转换（显示转换）")]),t._v(" "),e("li",[t._v("自动转换（隐式转换）")])]),t._v(" "),e("h2",{attrs:{id:"显示转换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#显示转换"}},[t._v("#")]),t._v(" 显示转换")]),t._v(" "),e("ul",[e("li",[t._v("Number")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://peterchen97.coding.net/p/img2/d/test/git/raw/master/69de904c60156a69bd62df7059ace6a2ba6d65130769f00d2711753928bbae02.png",alt:"图 8"}})]),t._v(" "),e("ul",[e("li",[t._v("parseInt\n"),e("ul",[e("li",[t._v("遇到无法转换的字符则暂停")])])]),t._v(" "),e("li",[t._v("String")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://peterchen97.coding.net/p/img2/d/test/git/raw/master/3122be2c95ae45c3dcfad88657a7530d7ff7b9a9183dd47e682bf70a14669fab.png",alt:"图 9"}})]),t._v(" "),e("ul",[e("li",[t._v("Boolean")])]),t._v(" "),e("h2",{attrs:{id:"隐式转换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#隐式转换"}},[t._v("#")]),t._v(" 隐式转换")]),t._v(" "),e("ul",[e("li",[t._v("比较运算（==、!=、>、<）、if、while需要布尔值地方")]),t._v(" "),e("li",[t._v("算术运算（+、-、*、/、%）")])]),t._v(" "),e("h2",{attrs:{id:"补充"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#补充"}},[t._v("#")]),t._v(" 补充")]),t._v(" "),e("h3",{attrs:{id:"和-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#和-的区别"}},[t._v("#")]),t._v(" == 和 === 的区别")]),t._v(" "),e("ul",[e("li",[t._v("等于操作符（==）在比较中会先进行类型转换，再确定操作数是否相等")]),t._v(" "),e("li",[t._v("全等操作符由 3 个等于号（ === ）表示，只有两个操作数在不转换的前提下相等才返回 true。即类型相同，值也需相同")])]),t._v(" "),e("p",[t._v("如果一个操作数是对象，另一个操作数不是，则调用对象的 valueOf()方法取得其原始值，再根据前面的规则进行比较")]),t._v(" "),e("p",[t._v("下面进一步做个小结：")]),t._v(" "),e("ul",[e("li",[t._v("两个都为简单类型，字符串和布尔值都会转换成数值，再比较")]),t._v(" "),e("li",[t._v("简单类型与引用类型比较，对象转化成其原始类型的值，再比较")]),t._v(" "),e("li",[t._v("两个都为引用类型，则比较它们是否指向同一个对象")]),t._v(" "),e("li",[t._v("null 和 undefined 相等")]),t._v(" "),e("li",[t._v("存在 NaN 则返回 false")])])])}),[],!1,null,null,null);a.default=_.exports}}]);
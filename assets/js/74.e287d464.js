(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{454:function(t,e,a){"use strict";a.r(e);var o=a(29),s=Object(o.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"单点登录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单点登录"}},[t._v("#")]),t._v(" 单点登录")]),t._v(" "),a("p",[t._v("Single Sign On (SSO)，是目前企业业务中整合的解决方案之一")]),t._v(" "),a("p",[t._v("当一个系统成功登录以后，passport将会颁发一个令牌给各个子系统，子系统可以拿着令牌会获取各自的受保护资源，为了减少频繁认证，各个子系统在被passport授权以后，会建立一个局部会话，在一定时间内可以无需再次向passport发起认证")]),t._v(" "),a("h2",{attrs:{id:"实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[t._v("#")]),t._v(" 实现")]),t._v(" "),a("ul",[a("li",[t._v("同域名下的单点登录\n"),a("ul",[a("li",[t._v("cookie， domain 设置父域")])])]),t._v(" "),a("li",[t._v("不同域名\n"),a("ul",[a("li",[t._v("通过认证中心的请求进行校验")]),t._v(" "),a("li",[t._v("如果登录则重定向回去，将 token 携带在 url 上")]),t._v(" "),a("li",[t._v("将 Token 写入系统 Cookie，然后给本次访问放行")]),t._v(" "),a("li",[t._v("此种实现方式相对复杂，支持跨域，扩展性好，是单点登录的标准做法")])])]),t._v(" "),a("li",[t._v("不同域名 2\n"),a("ul",[a("li",[t._v("前端通过 iframe+postMessage() 方式，将同一份 Token 写入到了多个域下的 LocalStorage 中，前端每次在向后端发送请求之前，都会主动从 LocalStorage 中读取Token并在请求中携带，这样就实现了同一份Token 被多个域所共享")])])])])])}),[],!1,null,null,null);e.default=s.exports}}]);
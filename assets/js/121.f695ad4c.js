(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{501:function(t,v,_){"use strict";_.r(v);var r=_(29),d=Object(r.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"http"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" HTTP")]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"#http"}},[t._v("HTTP")]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"#%E8%AF%B7%E6%B1%82%E6%96%B9%E6%B3%95%E5%8C%85%E6%8B%AC"}},[t._v("请求方法包括")])]),t._v(" "),_("li",[_("a",{attrs:{href:"#get%E4%B8%8Epost"}},[t._v("Get与Post")]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"#get%E5%92%8Cpost%E7%9A%84%E5%8C%BA%E5%88%AB"}},[t._v("get和post的区别")])])])]),t._v(" "),_("li",[_("a",{attrs:{href:"#%E7%8A%B6%E6%80%81%E7%A0%81"}},[t._v("状态码")]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"#http%E7%8A%B6%E6%80%81%E7%A0%81%E5%88%86%E7%B1%BB"}},[t._v("HTTP状态码分类")])]),t._v(" "),_("li",[_("a",{attrs:{href:"#http%E7%8A%B6%E6%80%81%E7%A0%81%E5%88%97%E8%A1%A8-"}},[t._v("HTTP状态码列表 |")])])])]),t._v(" "),_("li",[_("a",{attrs:{href:"#%E5%8D%8F%E8%AE%AE%E7%89%88%E6%9C%AC"}},[t._v("协议版本")]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"#http-10-%E4%B8%8E-11%E5%8C%BA%E5%88%AB"}},[t._v("Http 1.0 与 1.1区别")])]),t._v(" "),_("li",[_("a",{attrs:{href:"#http11%E5%92%8Chttp2%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB"}},[t._v("Http1.1和Http2之间的区别")])])])]),t._v(" "),_("li",[_("a",{attrs:{href:"#https%E8%AF%A6%E8%A7%A3"}},[t._v("HTTPS详解")]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"#tls--ssl"}},[t._v("TLS / SSL")]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"#ssl"}},[t._v("SSL")])]),t._v(" "),_("li",[_("a",{attrs:{href:"#tls"}},[t._v("TLS")])])])]),t._v(" "),_("li",[_("a",{attrs:{href:"#%E4%B8%8D%E5%8A%A0%E5%AF%86%E5%8F%AF%E8%83%BD%E5%AD%98%E5%9C%A8%E7%9A%84%E9%A3%8E%E9%99%A9"}},[t._v("不加密可能存在的风险")])])])]),t._v(" "),_("li",[_("a",{attrs:{href:"#%E5%A6%82%E4%BD%95%E7%BC%93%E5%AD%98"}},[t._v("如何缓存")])])])])]),t._v(" "),_("h2",{attrs:{id:"请求方法包括"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#请求方法包括"}},[t._v("#")]),t._v(" 请求方法包括")]),t._v(" "),_("p",[t._v("OPTIONS, GET, POST, HEAD, DELETE, TRACE和 Connect")]),t._v(" "),_("h2",{attrs:{id:"get与post"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#get与post"}},[t._v("#")]),t._v(" Get与Post")]),t._v(" "),_("h3",{attrs:{id:"get和post的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#get和post的区别"}},[t._v("#")]),t._v(" get和post的区别")]),t._v(" "),_("ul",[_("li",[t._v("get请求一般用于向服务器查询某些信息, post请求通常用于向服务器发送应该被保存的数据. 即: get是从服务器上获取数据，post是向服务器传送数据")]),t._v(" "),_("li",[t._v("get请求可以将查询字符串参数追加到url的末尾，有长度限制; post请求应该把数据作为请求的主体提交. 其请求主体可以包含非常多的数据, 而且格式不限")]),t._v(" "),_("li",[t._v("因为get请求提交的数据直接加载url末尾,所以其大小有限制; 理论来讲, post是没有大小限制的")]),t._v(" "),_("li",[t._v("post安全性比get要高(post方法请求是封装在http消息包体中)")]),t._v(" "),_("li",[t._v("对于get方式, 服务器端用Request.QueryString获取变量的值")]),t._v(" "),_("li",[t._v("对于post方式, 服务器端用Request.Form获取提交的数据")])]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("&")]),t._v(" "),_("th",[t._v("get")]),t._v(" "),_("th",[t._v("post")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("后退/刷新")]),t._v(" "),_("td",[t._v("无害")]),t._v(" "),_("td",[t._v("请求重新提交")])]),t._v(" "),_("tr",[_("td",[t._v("书签")]),t._v(" "),_("td",[t._v("可做书签")]),t._v(" "),_("td",[t._v("不可做")])]),t._v(" "),_("tr",[_("td",[t._v("缓存")]),t._v(" "),_("td",[t._v("可被缓存")]),t._v(" "),_("td",[t._v("不能被缓存")])]),t._v(" "),_("tr",[_("td",[t._v("历史")]),t._v(" "),_("td",[t._v("保留在浏览器记录里")]),t._v(" "),_("td",[t._v("不保留")])]),t._v(" "),_("tr",[_("td",[t._v("对数据长度限制")]),t._v(" "),_("td",[t._v("限制（2048字符）")]),t._v(" "),_("td",[t._v("不限制")])]),t._v(" "),_("tr",[_("td",[t._v("安全性")]),t._v(" "),_("td",[t._v("url中暴露数据")]),t._v(" "),_("td",[t._v("相对安全")])]),t._v(" "),_("tr",[_("td",[t._v("可见性")]),t._v(" "),_("td",[t._v("url中可见")]),t._v(" "),_("td",[t._v("不可见")])])])]),t._v(" "),_("h2",{attrs:{id:"状态码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#状态码"}},[t._v("#")]),t._v(" 状态码")]),t._v(" "),_("h3",{attrs:{id:"http状态码分类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http状态码分类"}},[t._v("#")]),t._v(" HTTP状态码分类")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("分类")]),t._v(" "),_("th",[t._v("分类描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("1××")]),t._v(" "),_("td",[t._v("信息，服务器收到请求，需要请求者继续操作")])]),t._v(" "),_("tr",[_("td",[t._v("2××")]),t._v(" "),_("td",[t._v("成功，操作被成功接收并处理")])]),t._v(" "),_("tr",[_("td",[t._v("3××")]),t._v(" "),_("td",[t._v("重定向，需要进一步的操作以完成请求")])]),t._v(" "),_("tr",[_("td",[t._v("4××")]),t._v(" "),_("td",[t._v("客户端错误，请求包含语法错误或无法完成请求")])]),t._v(" "),_("tr",[_("td",[t._v("5××")]),t._v(" "),_("td",[t._v("服务器错误，服务器在请求的过程中发生了错误")])])])]),t._v(" "),_("h3",{attrs:{id:"http状态码列表"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http状态码列表"}},[t._v("#")]),t._v(" HTTP状态码列表 |")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("状态码")]),t._v(" "),_("th",[t._v("状态码英文名称")]),t._v(" "),_("th",[t._v("中文描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("101")]),t._v(" "),_("td",[t._v("Switching Protocols")]),t._v(" "),_("td",[t._v("切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议，例如，切换到HTTP的新版本协议")])]),t._v(" "),_("tr",[_("td",[t._v("200")]),t._v(" "),_("td",[t._v("OK")]),t._v(" "),_("td",[t._v("请求成功。一般用于GET与POST请求")])]),t._v(" "),_("tr",[_("td",[t._v("201")]),t._v(" "),_("td",[t._v("Created")]),t._v(" "),_("td",[t._v("已创建。成功请求并创建了新的资源")])]),t._v(" "),_("tr",[_("td",[t._v("202")]),t._v(" "),_("td",[t._v("Accepted")]),t._v(" "),_("td",[t._v("已接受。已经接受请求，但未处理完成")])]),t._v(" "),_("tr",[_("td",[t._v("203")]),t._v(" "),_("td",[t._v("Non-Authoritative Information")]),t._v(" "),_("td",[t._v("非授权信息。请求成功。但返回的meta信息不在原始的服务器，而是一个副本")])]),t._v(" "),_("tr",[_("td",[t._v("204")]),t._v(" "),_("td",[t._v("No Content")]),t._v(" "),_("td",[t._v("无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档")])]),t._v(" "),_("tr",[_("td",[t._v("205")]),t._v(" "),_("td",[t._v("Reset Content")]),t._v(" "),_("td",[t._v("重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域")])]),t._v(" "),_("tr",[_("td",[t._v("206")]),t._v(" "),_("td",[t._v("Partial Content")]),t._v(" "),_("td",[t._v("部分内容。服务器成功处理了部分GET请求")])]),t._v(" "),_("tr",[_("td",[t._v("300")]),t._v(" "),_("td",[t._v("Multiple Choices")]),t._v(" "),_("td",[t._v("多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择")])]),t._v(" "),_("tr",[_("td",[t._v("301")]),t._v(" "),_("td",[t._v("Moved Permanently")]),t._v(" "),_("td",[t._v("永久移动。重定向")])]),t._v(" "),_("tr",[_("td",[t._v("302")]),t._v(" "),_("td",[t._v("Found")]),t._v(" "),_("td",[t._v("临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI")])]),t._v(" "),_("tr",[_("td",[t._v("303")]),t._v(" "),_("td",[t._v("See Other")]),t._v(" "),_("td",[t._v("查看其它地址。与301类似。使用GET和POST请求查看")])]),t._v(" "),_("tr",[_("td",[t._v("304")]),t._v(" "),_("td",[t._v("Not Modified")]),t._v(" "),_("td",[t._v("未修改。所请求的资源未修改，直接从缓存返回资源")])]),t._v(" "),_("tr",[_("td",[t._v("305")]),t._v(" "),_("td",[t._v("Use Proxy")]),t._v(" "),_("td",[t._v("使用代理。所请求的资源必须通过代理访问")])]),t._v(" "),_("tr",[_("td",[t._v("306")]),t._v(" "),_("td",[t._v("Unused")]),t._v(" "),_("td",[t._v("已经被废弃的HTTP状态码")])]),t._v(" "),_("tr",[_("td",[t._v("307")]),t._v(" "),_("td",[t._v("Temporary Redirect")]),t._v(" "),_("td",[t._v("临时重定向。与302类似。使用GET请求重定向")])]),t._v(" "),_("tr",[_("td",[t._v("400")]),t._v(" "),_("td",[t._v("Bad Request")]),t._v(" "),_("td",[t._v("客户端请求的语法错误，服务器无法理解")])]),t._v(" "),_("tr",[_("td",[t._v("401")]),t._v(" "),_("td",[t._v("Unauthorized")]),t._v(" "),_("td",[t._v("请求要求用户的身份认证")])]),t._v(" "),_("tr",[_("td",[t._v("402")]),t._v(" "),_("td",[t._v("Payment Required")]),t._v(" "),_("td",[t._v("保留，将来使用")])]),t._v(" "),_("tr",[_("td",[t._v("403")]),t._v(" "),_("td",[t._v("Forbidden")]),t._v(" "),_("td",[t._v("服务器理解请求客户端的请求，但是拒绝执行此请求")])]),t._v(" "),_("tr",[_("td",[t._v("404")]),t._v(" "),_("td",[t._v("Not Found")]),t._v(" "),_("td",[t._v('服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置"您所请求的资源无法找到"的个性页面')])]),t._v(" "),_("tr",[_("td",[t._v("405")]),t._v(" "),_("td",[t._v("Method Not Allowed")]),t._v(" "),_("td",[t._v("客户端请求中的方法被禁止")])]),t._v(" "),_("tr",[_("td",[t._v("406")]),t._v(" "),_("td",[t._v("Not Acceptable")]),t._v(" "),_("td",[t._v("服务器无法根据客户端请求的内容特性完成请求")])]),t._v(" "),_("tr",[_("td",[t._v("407")]),t._v(" "),_("td",[t._v("Proxy Authentication Required")]),t._v(" "),_("td",[t._v("请求要求代理的身份认证，与401类似，但请求者应当使用代理进行授权")])]),t._v(" "),_("tr",[_("td",[t._v("408")]),t._v(" "),_("td",[t._v("Request Time-out")]),t._v(" "),_("td",[t._v("服务器等待客户端发送的请求时间过长，超时")])]),t._v(" "),_("tr",[_("td",[t._v("409")]),t._v(" "),_("td",[t._v("Conflict")]),t._v(" "),_("td",[t._v("服务器完成客户端的PUT请求是可能返回此代码，服务器处理请求时发生了冲突")])]),t._v(" "),_("tr",[_("td",[t._v("410")]),t._v(" "),_("td",[t._v("Gone")]),t._v(" "),_("td",[t._v("客户端请求的资源已经不存在。410不同于404，如果资源以前有现在被永久删除了可使用410代码，网站设计人员可通过301代码指定资源的新位置")])]),t._v(" "),_("tr",[_("td",[t._v("411")]),t._v(" "),_("td",[t._v("Length Required")]),t._v(" "),_("td",[t._v("服务器无法处理客户端发送的不带Content-Length的请求信息")])]),t._v(" "),_("tr",[_("td",[t._v("412")]),t._v(" "),_("td",[t._v("Precondition Failed")]),t._v(" "),_("td",[t._v("客户端请求信息的先决条件错误")])]),t._v(" "),_("tr",[_("td",[t._v("413")]),t._v(" "),_("td",[t._v("Request Entity Too Large")]),t._v(" "),_("td",[t._v("由于请求的实体过大，服务器无法处理，因此拒绝请求。为防止客户端的连续请求，服务器可能会关闭连接。如果只是服务器暂时无法处理，则会包含一个Retry-After的响应信息")])]),t._v(" "),_("tr",[_("td",[t._v("414")]),t._v(" "),_("td",[t._v("Request-URI Too Large")]),t._v(" "),_("td",[t._v("请求的URI过长（URI通常为网址），服务器无法处理")])]),t._v(" "),_("tr",[_("td",[t._v("415")]),t._v(" "),_("td",[t._v("Unsupported Media Type")]),t._v(" "),_("td",[t._v("服务器无法处理请求附带的媒体格式")])]),t._v(" "),_("tr",[_("td",[t._v("416")]),t._v(" "),_("td",[t._v("Requested range not satisfiable")]),t._v(" "),_("td",[t._v("客户端请求的范围无效")])]),t._v(" "),_("tr",[_("td",[t._v("417")]),t._v(" "),_("td",[t._v("Expectation Failed")]),t._v(" "),_("td",[t._v("服务器无法满足Expect的请求头信息")])]),t._v(" "),_("tr",[_("td",[t._v("500")]),t._v(" "),_("td",[t._v("Internal Server Error")]),t._v(" "),_("td",[t._v("服务器内部错误，无法完成请求")])]),t._v(" "),_("tr",[_("td",[t._v("501")]),t._v(" "),_("td",[t._v("Not Implemented")]),t._v(" "),_("td",[t._v("服务器不支持请求的功能，无法完成请求")])]),t._v(" "),_("tr",[_("td",[t._v("502")]),t._v(" "),_("td",[t._v("Bad Gateway")]),t._v(" "),_("td",[t._v("充当网关或代理的服务器，从远端服务器接收到了一个无效的请求")])]),t._v(" "),_("tr",[_("td",[t._v("503")]),t._v(" "),_("td",[t._v("Service Unavailable")]),t._v(" "),_("td",[t._v("由于超载或系统维护，服务器暂时的无法处理客户端的请求。延时的长度可包含在服务器的Retry-After头信息中")])]),t._v(" "),_("tr",[_("td",[t._v("504")]),t._v(" "),_("td",[t._v("Gateway Time-out")]),t._v(" "),_("td",[t._v("充当网关或代理的服务器，未及时从远端服务器获取请求")])]),t._v(" "),_("tr",[_("td",[t._v("505")]),t._v(" "),_("td",[t._v("HTTP Version not supported")]),t._v(" "),_("td",[t._v("服务器不支持请求的HTTP协议的版本，无法完成处理")])])])]),t._v(" "),_("h2",{attrs:{id:"协议版本"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#协议版本"}},[t._v("#")]),t._v(" 协议版本")]),t._v(" "),_("h3",{attrs:{id:"http-1-0-与-1-1区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http-1-0-与-1-1区别"}},[t._v("#")]),t._v(" Http 1.0 与 1.1区别")]),t._v(" "),_("ul",[_("li",[t._v("1.0 对于每个连接都得建立一次连接, 一次只能传送一个请求和响应, 请求就会关闭")]),t._v(" "),_("li",[t._v("1.1 在同一个连接中可以传送多个请求和响应, 多个请求可以重叠和同时进行")]),t._v(" "),_("li",[t._v("1.1中引入了ETag头, 它的值entity tag可以用来唯一的描述一个资源. 请求消息中可以使用If-None-Match头域来匹配资源的entitytag是否有变化")]),t._v(" "),_("li",[t._v("1.1 新增了Cache-Control头域(消息请求和响应请求都可以使用), 它支持一个可扩展的指令子集")]),t._v(" "),_("li",[t._v("1.0中只定义了16个状态响应码, 对错误或警告的提示不够具体. http1.1引入了一个Warning头域, 增加对错误或警告信息的描述. 且新增了24个状态响应码")])]),t._v(" "),_("h3",{attrs:{id:"http1-1和http2之间的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http1-1和http2之间的区别"}},[t._v("#")]),t._v(" Http1.1和Http2之间的区别")]),t._v(" "),_("ol",[_("li",[t._v("HTTP/2采用二进制格式化而非文本格式")]),t._v(" "),_("li",[t._v("HTTP/2是完全的多路复用，只需要一个链接即可实现并行")]),t._v(" "),_("li",[t._v("使用报头压缩，降低了开销")]),t._v(" "),_("li",[t._v("让服务器可以将 响应 主动推送到客户端缓存中")])]),t._v(" "),_("h2",{attrs:{id:"https详解"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https详解"}},[t._v("#")]),t._v(" HTTPS详解")]),t._v(" "),_("p",[t._v("相比HTTP多了个S，其实指的是应用层和传输层中间的TLS/SSL的加密")]),t._v(" "),_("h3",{attrs:{id:"tls-ssl"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tls-ssl"}},[t._v("#")]),t._v(" TLS / SSL")]),t._v(" "),_("p",[t._v("全称Transport Layer Security和他的前身 SSL（Secure Sockets Layer）都是一种安全协议，旨在为互联网通信传输提供安全及数据完整性保障")]),t._v(" "),_("h4",{attrs:{id:"ssl"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#ssl"}},[t._v("#")]),t._v(" SSL")]),t._v(" "),_("p",[t._v("SSL包括记录层与传输层，记录层协议确定传输层数据的封装格式。传输层安全协议使用X.509认证，之后利用非对称加密演算来对通信方做身份认证，之后交换对称密钥作为会谈密钥（Session key）")]),t._v(" "),_("p",[t._v("这个会谈密钥是用来将通信两方交换的数据做加密，保证两个应用间通信的保密性和可靠性，使客户与服务器应用之间的通信不被攻击者窃听")]),t._v(" "),_("h4",{attrs:{id:"tls"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tls"}},[t._v("#")]),t._v(" TLS")]),t._v(" "),_("p",[t._v("连接建立流程：")]),t._v(" "),_("ul",[_("li",[t._v("客户端连接到支持TLS协议的服务器，并列出支持的密码组合（加密密码算法+加密哈希算法），第一次握手开始")]),t._v(" "),_("li",[t._v("服务器从该列表中决定加密和散列函数，并通知客户端")]),t._v(" "),_("li",[t._v("服务器发回数字证书（包含服务器名称，CA证书与公钥）")]),t._v(" "),_("li",[t._v("客户端验证证书有效性")]),t._v(" "),_("li",[t._v("客户端使用服务器发回的公钥加密随机生成的密钥，发送到服务器，只有服务器的私钥才能解密")]),t._v(" "),_("li",[t._v("利用随机数，双方生成用于加密和解密的对称密钥")])]),t._v(" "),_("h3",{attrs:{id:"不加密可能存在的风险"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#不加密可能存在的风险"}},[t._v("#")]),t._v(" 不加密可能存在的风险")]),t._v(" "),_("ul",[_("li",[t._v("窃听风险")]),t._v(" "),_("li",[t._v("篡改风险")]),t._v(" "),_("li",[t._v("冒充风险")])]),t._v(" "),_("h2",{attrs:{id:"如何缓存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何缓存"}},[t._v("#")]),t._v(" 如何缓存")]),t._v(" "),_("ul",[_("li",[t._v("service worker")]),t._v(" "),_("li",[t._v("localStorage")]),t._v(" "),_("li",[t._v("indexedDB")])])])}),[],!1,null,null,null);v.default=d.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{419:function(s,t,a){"use strict";a.r(t);var e=a(29),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"vue-router"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-router"}},[s._v("#")]),s._v(" vue-router")]),s._v(" "),a("h2",{attrs:{id:"前端路由原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端路由原理"}},[s._v("#")]),s._v(" 前端路由原理")]),s._v(" "),a("p",[s._v("前端路由实现起来其实很简单，本质就是监听 URL 的变化，然后匹配路由规则，显示相应的页面，并且无须刷新。目前单页面使用的路由就只有两种实现方式")]),s._v(" "),a("ul",[a("li",[s._v("hash模式 - hashchange")]),s._v(" "),a("li",[s._v("history模式 - popstate")])]),s._v(" "),a("h3",{attrs:{id:"hash模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hash模式"}},[s._v("#")]),s._v(" Hash模式")]),s._v(" "),a("p",[s._v("触发方式：")]),s._v(" "),a("ul",[a("li",[s._v("点击跳转 / 浏览器历史跳转\n"),a("ul",[a("li",[s._v("触发hashchange事件")]),s._v(" "),a("li",[s._v("匹配路由规则进行跳转")])])]),s._v(" "),a("li",[s._v("手动刷新url\n"),a("ul",[a("li",[s._v("发送服务器请求， 但是也不会触发hashchange事件，可通过load事件")]),s._v(" "),a("li",[s._v("匹配路由规则进行跳转")])])])]),s._v(" "),a("h3",{attrs:{id:"history模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#history模式"}},[s._v("#")]),s._v(" History模式")]),s._v(" "),a("ul",[a("li",[s._v("浏览器动作\n"),a("ul",[a("li",[s._v("触发popstate")]),s._v(" "),a("li",[s._v("包括调用history.back()")])])]),s._v(" "),a("li",[s._v("浏览器跳转\n"),a("ul",[a("li",[s._v("调用pushState")])])]),s._v(" "),a("li",[s._v("手动刷新url\n"),a("ul",[a("li",[s._v("需要后端配合重定向")])])])]),s._v(" "),a("h2",{attrs:{id:"路由注册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由注册"}},[s._v("#")]),s._v(" 路由注册")]),s._v(" "),a("p",[s._v("对于路由注册来说，核心就是调用 Vue.use(VueRouter)使得 VueRouter 可以使用 Vue。")]),s._v(" "),a("p",[s._v("然后通过 Vue 来调用 VueRouter 的 install 函数。")]),s._v(" "),a("p",[s._v("在该函数中，核心就是给组件 "),a("strong",[s._v("混入钩子函数")]),s._v(" 和 "),a("strong",[s._v("全局注册两个路由组件")])]),s._v(" "),a("h2",{attrs:{id:"实现嵌套路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现嵌套路由"}},[s._v("#")]),s._v(" 实现嵌套路由")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/user/foo/profile                     /user/foo/posts\n+------------------+                  +-----------------+\n| User             |                  | User            |\n| +--------------+ |                  | +-------------+ |\n| | Profile      | |  +------------\x3e  | | Posts       | |\n| |              | |                  | |             | |\n| +--------------+ |                  | +-------------+ |\n+------------------+                  +-----------------+\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" User "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  template"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\n    <div class="user">\n      <h2>User {{ $route.params.id }}</h2>\n      <router-view></router-view>\n    </div>\n  ')]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" router "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("VueRouter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  routes"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/user/:id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" component"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      children"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当 /user/:id/profile 匹配成功，")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// UserProfile 会被渲染在 User 的 <router-view> 中")]),s._v("\n          path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'profile'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          component"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" UserProfile\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当 /user/:id/posts 匹配成功")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// UserPosts 会被渲染在 User 的 <router-view> 中")]),s._v("\n          path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'posts'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          component"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" UserPosts\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("h2",{attrs:{id:"路由守卫"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由守卫"}},[s._v("#")]),s._v(" 路由守卫")]),s._v(" "),a("ul",[a("li",[s._v("全局钩子\n"),a("ul",[a("li",[s._v("beforeEach\n"),a("ul",[a("li",[s._v("在路由跳转前触发，参数包括to,from,next（参数会单独介绍）三个，这个钩子作用主要是用于登录验证，也就是路由还没跳转提前告知，以免跳转了再通知就为时已晚")])])]),s._v(" "),a("li",[s._v("beforeResolve\n"),a("ul",[a("li",[s._v("这个钩子和beforeEach类似，也是路由跳转前触发，参数也是to,from,next三个，和beforeEach区别官方解释为：区别是在导航被确认之前，同时在所有组件内守卫和异步路由组件被解析之后，解析守卫就被调用")]),s._v(" "),a("li",[s._v("即在 beforeEach 和 组件内beforeRouteEnter 之后，afterEach之前调用。")])])]),s._v(" "),a("li",[s._v("afterEach\n"),a("ul",[a("li",[s._v("他是在路由跳转完成后触发，参数包括to,from没有了next（参数会单独介绍）")]),s._v(" "),a("li",[s._v("他发生在beforeEach和beforeResolve之后，beforeRouteEnter（组件内守卫，后讲）之前")])])])])]),s._v(" "),a("li",[s._v("独享路有钩子（在配置中设置）\n"),a("ul",[a("li",[s._v("beforeEnter\n"),a("ul",[a("li",[s._v("和beforeEach完全相同，如果都设置则在beforeEach之后紧随执行，参数to、from、next")])])])])]),s._v(" "),a("li",[s._v("组件内守卫\n"),a("ul",[a("li",[s._v("beforeRouteEnter (to, from, next)")]),s._v(" "),a("li",[s._v("beforeRouteUpdate (to, from, next)")]),s._v(" "),a("li",[s._v("beforeRouteLeave (to, from, next)")])])])]),s._v(" "),a("h3",{attrs:{id:"初始化调用顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化调用顺序"}},[s._v("#")]),s._v(" 初始化调用顺序")]),s._v(" "),a("p",[s._v("当点击切换路由时：")]),s._v(" "),a("ul",[a("li",[s._v("beforeRouterLeave")]),s._v(" "),a("li",[s._v("--\x3ebeforeEach")]),s._v(" "),a("li",[s._v("--\x3ebeforeEnter")]),s._v(" "),a("li",[s._v("--\x3ebeforeRouteEnter")]),s._v(" "),a("li",[s._v("--\x3ebeforeResolve")]),s._v(" "),a("li",[s._v("--\x3eafterEach")]),s._v(" "),a("li",[s._v("--\x3ebeforeCreate--\x3ecreated--\x3ebeforeMount--\x3emounted")]),s._v(" "),a("li",[s._v("--\x3ebeforeRouteEnter的next的回调")])])])}),[],!1,null,null,null);t.default=n.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{417:function(t,a,e){"use strict";e.r(a);var s=e(29),o=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"vuex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vuex"}},[t._v("#")]),t._v(" Vuex")]),t._v(" "),e("h2",{attrs:{id:"概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),e("h3",{attrs:{id:"常见属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见属性"}},[t._v("#")]),t._v(" 常见属性")]),t._v(" "),e("blockquote",[e("p",[t._v("State、 Getter、Mutation 、Action、 Module")])]),t._v(" "),e("ul",[e("li",[t._v("state: state 定义了应用状态的数据结构，同样可以在这里设置默认的初始状态。代码样式")]),t._v(" "),e("li",[t._v("actions: actions就是从服务器端获取数据，在数据获取完成后会调用store.commit()来调用更改 Store 中的状态")]),t._v(" "),e("li",[t._v("mutations: 调用 mutations 是唯一允许更新应用状态的地方")]),t._v(" "),e("li",[t._v("getters: Getters 允许组件从 Store 中获取数据，譬如我们可以从 Store 中的 projectList 中筛选出已完成的项目列表")]),t._v(" "),e("li",[t._v("modules: modules允许将当个store拆分成多个store，每个模块拥有自己的 state、mutation、action、getter、甚至是嵌套子模块")])]),t._v(" "),e("h2",{attrs:{id:"常见问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[t._v("#")]),t._v(" 常见问题")]),t._v(" "),e("h3",{attrs:{id:"vuex-中-mutation-和-action-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vuex-中-mutation-和-action-的区别"}},[t._v("#")]),t._v(" Vuex 中 mutation 和 action 的区别")]),t._v(" "),e("p",[t._v("是一种默认规范")]),t._v(" "),e("ul",[e("li",[t._v("action 可以进行异步操作")]),t._v(" "),e("li",[t._v("mutation 必须是同步操作")]),t._v(" "),e("li",[t._v("action支持载荷方式触发mutation")])])])}),[],!1,null,null,null);a.default=o.exports}}]);